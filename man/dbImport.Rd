% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/db.R
\name{dbImport}
\alias{dbImport}
\title{Import tabular data into SQL}
\usage{
dbImport(
  conn,
  data,
  name = NULL,
  pattern = "\\\\.(rds|csv|gz)$",
  index = NULL,
  overwrite = FALSE,
  verbose = TRUE,
  na.strings = "",
  ...
)
}
\arguments{
\item{conn}{a \code{DBIConnection} object, as returned by \code{\link[DBI]{dbConnect}}.}

\item{name}{table name. Used only when \code{data} is a \code{data.table} or path to file.}

\item{pattern}{an optional regular expression. Only file names into the \code{data} folder which match the regular expression will be used.}

\item{index}{character vector of column names to use as index.}

\item{overwrite}{if \code{TRUE}, an existing table of the same name will be overwritten. This argument doesn't change behavior if the table does not exist yet.}

\item{verbose}{if \code{TRUE}, print on progress.}

\item{na.strings}{a character vector of strings which are to be interpreted as \code{NA} values by \code{\link[data.table]{fread}}.}

\item{...}{additional arguments passed to \code{\link[data.table]{fread}}.}

\item{table}{\code{data.table}, \code{data.frame}, path to a tabular data file, or path to the directory containing tabular data files.}
}
\value{
\code{NULL}
}
\description{
Create SQL tables from \code{data.table}, \code{data.frame}, or flat files.
}
\examples{
\dontrun{
library(RSQLite)
conn <- dbConnect(RSQLite::SQLite(), "crsp.db")
path <- "path/to/crsp/sazYYYYMM_r"
dbInit(conn, path)
}

}
